### ***
### WARNING: DO NOT manually EDIT or MERGE this file, it is generated by 'make ci-config'.
### INSTEAD: Edit or merge the source in config/ then run 'make ci-config'.
### ***
# Orb 'circleci/slack@3.4.2' resolved to 'circleci/slack@3.4.2'
version: 2
jobs:
  bundle-releases:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - checkout
    - run:
        command: make -C packages*.lock write-all-package-cache-keys
        name: Write all package cache keys
    - restore_cache:
        key: cache006-package-18e4a3d8cebfa3e1d55f05eff9f04d7c1a7ce5ba-{{checksum ".buildcache/cache-keys/package-18e4a3d8cebfa3e1d55f05eff9f04d7c1a7ce5ba"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 18e4a3d8cebfa3e1d55f05eff9f04d7c1a7ce5ba
        name: Write package metadata for darwin_amd64_package
    - restore_cache:
        key: cache006-package-d42d58396e7fbb73b8ef98f61fc5533b1ac42fa1-{{checksum ".buildcache/cache-keys/package-d42d58396e7fbb73b8ef98f61fc5533b1ac42fa1"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: d42d58396e7fbb73b8ef98f61fc5533b1ac42fa1
        name: Write package metadata for freebsd_386_package
    - restore_cache:
        key: cache006-package-f5257d870bc42fb92f17ea3a13761538fb7a9d7d-{{checksum ".buildcache/cache-keys/package-f5257d870bc42fb92f17ea3a13761538fb7a9d7d"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: f5257d870bc42fb92f17ea3a13761538fb7a9d7d
        name: Write package metadata for freebsd_amd64_package
    - restore_cache:
        key: cache006-package-357574dc85bf12fb57091f018997bfc14289881f-{{checksum ".buildcache/cache-keys/package-357574dc85bf12fb57091f018997bfc14289881f"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 357574dc85bf12fb57091f018997bfc14289881f
        name: Write package metadata for freebsd_arm_package
    - restore_cache:
        key: cache006-package-b7a7452e0bddde0e5e8229594f99f7588bdf356c-{{checksum ".buildcache/cache-keys/package-b7a7452e0bddde0e5e8229594f99f7588bdf356c"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: b7a7452e0bddde0e5e8229594f99f7588bdf356c
        name: Write package metadata for linux_386_package
    - restore_cache:
        key: cache006-package-fa2f719eb3b1b39fa983867f2b27812707c2ec60-{{checksum ".buildcache/cache-keys/package-fa2f719eb3b1b39fa983867f2b27812707c2ec60"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: fa2f719eb3b1b39fa983867f2b27812707c2ec60
        name: Write package metadata for linux_amd64_package
    - restore_cache:
        key: cache006-package-38bc1a3cda8aaecb6d92b6472acb37201f00afde-{{checksum ".buildcache/cache-keys/package-38bc1a3cda8aaecb6d92b6472acb37201f00afde"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 38bc1a3cda8aaecb6d92b6472acb37201f00afde
        name: Write package metadata for linux_arm_package
    - restore_cache:
        key: cache006-package-29fcab1aa1a45f0ba9a863c2fd9afb0324c25b7f-{{checksum ".buildcache/cache-keys/package-29fcab1aa1a45f0ba9a863c2fd9afb0324c25b7f"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 29fcab1aa1a45f0ba9a863c2fd9afb0324c25b7f
        name: Write package metadata for linux_arm64_package
    - restore_cache:
        key: cache006-package-b3d8c12f0a1f6c68fff799ee8cbc47d987a51e85-{{checksum ".buildcache/cache-keys/package-b3d8c12f0a1f6c68fff799ee8cbc47d987a51e85"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: b3d8c12f0a1f6c68fff799ee8cbc47d987a51e85
        name: Write package metadata for netbsd_386_package
    - restore_cache:
        key: cache006-package-f6c8b1c13e5c636467b20e13944515e236c98c66-{{checksum ".buildcache/cache-keys/package-f6c8b1c13e5c636467b20e13944515e236c98c66"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: f6c8b1c13e5c636467b20e13944515e236c98c66
        name: Write package metadata for netbsd_amd64_package
    - restore_cache:
        key: cache006-package-ee0072e0d0e8f2564a35b544495a81ad35832866-{{checksum ".buildcache/cache-keys/package-ee0072e0d0e8f2564a35b544495a81ad35832866"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: ee0072e0d0e8f2564a35b544495a81ad35832866
        name: Write package metadata for openbsd_386_package
    - restore_cache:
        key: cache006-package-c385266991e61b54a3c062b8968463ab7088a0a1-{{checksum ".buildcache/cache-keys/package-c385266991e61b54a3c062b8968463ab7088a0a1"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: c385266991e61b54a3c062b8968463ab7088a0a1
        name: Write package metadata for openbsd_amd64_package
    - restore_cache:
        key: cache006-package-c21e3f16a056e333be4e16944935445d8249d246-{{checksum ".buildcache/cache-keys/package-c21e3f16a056e333be4e16944935445d8249d246"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: c21e3f16a056e333be4e16944935445d8249d246
        name: Write package metadata for solaris_amd64_package
    - restore_cache:
        key: cache006-package-17bb086a4d69d96a95c84f01d90cfab2c9db3ba2-{{checksum ".buildcache/cache-keys/package-17bb086a4d69d96a95c84f01d90cfab2c9db3ba2"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 17bb086a4d69d96a95c84f01d90cfab2c9db3ba2
        name: Write package metadata for windows_386_package
    - restore_cache:
        key: cache006-package-318b5bdae494d8e7ebc7552496e8f2b469279c1c-{{checksum ".buildcache/cache-keys/package-318b5bdae494d8e7ebc7552496e8f2b469279c1c"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 318b5bdae494d8e7ebc7552496e8f2b469279c1c
        name: Write package metadata for windows_amd64_package
    - run:
        command: make aliases
        name: Write package aliases
    - run:
        command: ls -lahR .buildcache
        name: List Build Cache
    - run:
        command: cp packages*.lock/pkgs.yml lockfile-standalone.yml
    - store_artifacts:
        destination: lockfile-standalone.yml
        path: lockfile-standalone.yml
    - store_artifacts:
        destination: packages-standalone
        path: .buildcache/packages
    - run:
        command: tar -czf packages-standalone.tar.gz .buildcache/packages lockfile-standalone.yml
    - store_artifacts:
        destination: packages-standalone.tar.gz
        path: packages-standalone.tar.gz
    - run:
        command: tar -czf meta-standalone.tar.gz .buildcache/packages/store/*.json lockfile-standalone.yml
    - store_artifacts:
        destination: meta-standalone.tar.gz
        path: meta-standalone.tar.gz
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
  darwin_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 18e4a3d8cebfa3e1d55f05eff9f04d7c1a7ce5ba
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-18e4a3d8cebfa3e1d55f05eff9f04d7c1a7ce5ba-{{checksum ".buildcache/cache-keys/package-18e4a3d8cebfa3e1d55f05eff9f04d7c1a7ce5ba"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-18e4a3d8cebfa3e1d55f05eff9f04d7c1a7ce5ba-{{checksum ".buildcache/cache-keys/package-18e4a3d8cebfa3e1d55f05eff9f04d7c1a7ce5ba"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  windows_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 17bb086a4d69d96a95c84f01d90cfab2c9db3ba2
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-17bb086a4d69d96a95c84f01d90cfab2c9db3ba2-{{checksum ".buildcache/cache-keys/package-17bb086a4d69d96a95c84f01d90cfab2c9db3ba2"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-17bb086a4d69d96a95c84f01d90cfab2c9db3ba2-{{checksum ".buildcache/cache-keys/package-17bb086a4d69d96a95c84f01d90cfab2c9db3ba2"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  build-common-layers:
    machine:
      image: ubuntu-1604:202007-01
    resource_class: xlarge
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build image cache
    - run:
        command: |
          if [ -f .buildcache/archives/03-copy-source-ca8ebf7592f88b86f492c947caab70914efd951c.tar.gz ]; then
            echo "Exact match found in cache, skipping build."
            circleci-agent step halt
          else
            echo "No exact match found, proceeding with build."
          fi
        name: Finish early if loaded exact match from cache.
    - run:
        command: |
          LAYER_SPEC_ID=03-copy-source-ca8ebf7592f88b86f492c947caab70914efd951c make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 00-base-b035732a9181cb923e58b88eff262c379a1a1ad2-image
        name: Build base layer
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 01-ui-a46925cd79db8d8f17f005774b1f4faef82d83b6-image
        name: Build ui layer
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 02-go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf-image
        name: Build go-modules layer
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 03-copy-source-ca8ebf7592f88b86f492c947caab70914efd951c-image
        name: Build copy-source layer
    - run:
        command: make -f packages*.lock/layer.mk 03-copy-source-ca8ebf7592f88b86f492c947caab70914efd951c-save
        name: Export builder image
    - save_cache:
        key: cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        name: Save layer copy-source to cache.
        paths:
        - .buildcache/archives/03-copy-source-ca8ebf7592f88b86f492c947caab70914efd951c.tar.gz
    - run:
        command: mv .buildcache/archives/03-copy-source-ca8ebf7592f88b86f492c947caab70914efd951c.tar.gz .buildcache/archives/02-go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf.tar.gz
        name: Prepare layer go-modules for caching
    - save_cache:
        key: cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        name: Save layer go-modules to cache.
        paths:
        - .buildcache/archives/02-go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf.tar.gz
    - run:
        command: mv .buildcache/archives/02-go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf.tar.gz .buildcache/archives/01-ui-a46925cd79db8d8f17f005774b1f4faef82d83b6.tar.gz
        name: Prepare layer ui for caching
    - save_cache:
        key: cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        name: Save layer ui to cache.
        paths:
        - .buildcache/archives/01-ui-a46925cd79db8d8f17f005774b1f4faef82d83b6.tar.gz
    - run:
        command: mv .buildcache/archives/01-ui-a46925cd79db8d8f17f005774b1f4faef82d83b6.tar.gz .buildcache/archives/00-base-b035732a9181cb923e58b88eff262c379a1a1ad2.tar.gz
        name: Prepare layer base for caching
    - save_cache:
        key: cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Save layer base to cache.
        paths:
        - .buildcache/archives/00-base-b035732a9181cb923e58b88eff262c379a1a1ad2.tar.gz
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
  linux_arm64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 29fcab1aa1a45f0ba9a863c2fd9afb0324c25b7f
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-29fcab1aa1a45f0ba9a863c2fd9afb0324c25b7f-{{checksum ".buildcache/cache-keys/package-29fcab1aa1a45f0ba9a863c2fd9afb0324c25b7f"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-29fcab1aa1a45f0ba9a863c2fd9afb0324c25b7f-{{checksum ".buildcache/cache-keys/package-29fcab1aa1a45f0ba9a863c2fd9afb0324c25b7f"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  linux_arm_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 38bc1a3cda8aaecb6d92b6472acb37201f00afde
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-38bc1a3cda8aaecb6d92b6472acb37201f00afde-{{checksum ".buildcache/cache-keys/package-38bc1a3cda8aaecb6d92b6472acb37201f00afde"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-38bc1a3cda8aaecb6d92b6472acb37201f00afde-{{checksum ".buildcache/cache-keys/package-38bc1a3cda8aaecb6d92b6472acb37201f00afde"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  linux_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: b7a7452e0bddde0e5e8229594f99f7588bdf356c
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-b7a7452e0bddde0e5e8229594f99f7588bdf356c-{{checksum ".buildcache/cache-keys/package-b7a7452e0bddde0e5e8229594f99f7588bdf356c"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-b7a7452e0bddde0e5e8229594f99f7588bdf356c-{{checksum ".buildcache/cache-keys/package-b7a7452e0bddde0e5e8229594f99f7588bdf356c"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  freebsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: d42d58396e7fbb73b8ef98f61fc5533b1ac42fa1
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-d42d58396e7fbb73b8ef98f61fc5533b1ac42fa1-{{checksum ".buildcache/cache-keys/package-d42d58396e7fbb73b8ef98f61fc5533b1ac42fa1"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-d42d58396e7fbb73b8ef98f61fc5533b1ac42fa1-{{checksum ".buildcache/cache-keys/package-d42d58396e7fbb73b8ef98f61fc5533b1ac42fa1"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  freebsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: f5257d870bc42fb92f17ea3a13761538fb7a9d7d
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-f5257d870bc42fb92f17ea3a13761538fb7a9d7d-{{checksum ".buildcache/cache-keys/package-f5257d870bc42fb92f17ea3a13761538fb7a9d7d"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-f5257d870bc42fb92f17ea3a13761538fb7a9d7d-{{checksum ".buildcache/cache-keys/package-f5257d870bc42fb92f17ea3a13761538fb7a9d7d"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  openbsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: ee0072e0d0e8f2564a35b544495a81ad35832866
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-ee0072e0d0e8f2564a35b544495a81ad35832866-{{checksum ".buildcache/cache-keys/package-ee0072e0d0e8f2564a35b544495a81ad35832866"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-ee0072e0d0e8f2564a35b544495a81ad35832866-{{checksum ".buildcache/cache-keys/package-ee0072e0d0e8f2564a35b544495a81ad35832866"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  linux_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: fa2f719eb3b1b39fa983867f2b27812707c2ec60
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-fa2f719eb3b1b39fa983867f2b27812707c2ec60-{{checksum ".buildcache/cache-keys/package-fa2f719eb3b1b39fa983867f2b27812707c2ec60"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-fa2f719eb3b1b39fa983867f2b27812707c2ec60-{{checksum ".buildcache/cache-keys/package-fa2f719eb3b1b39fa983867f2b27812707c2ec60"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  solaris_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: c21e3f16a056e333be4e16944935445d8249d246
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-c21e3f16a056e333be4e16944935445d8249d246-{{checksum ".buildcache/cache-keys/package-c21e3f16a056e333be4e16944935445d8249d246"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-c21e3f16a056e333be4e16944935445d8249d246-{{checksum ".buildcache/cache-keys/package-c21e3f16a056e333be4e16944935445d8249d246"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  build:
    machine:
      image: ubuntu-1604:201903-01
    steps:
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: |
          make test-ci
        name: Run Acceptance Tests
    - run:
        command: |
          echo 'export SLACK_BUILD_STATUS="fail"' >> $BASH_ENV
        name: Slack - Setting Failure Condition
        when: on_fail
    - run:
        command: |
          echo 'export SLACK_BUILD_STATUS="success"' >> $BASH_ENV
        name: Slack - Setting Success Condition
        when: on_success
    - run:
        command: |
          if [ ! -x /bin/bash ]; then
            echo Bash not installed.
            exit 1
          fi
        name: Provide error if non-bash shell
    - run:
        command: |
          current_branch_in_filter=false

          IFS="," read -ra BRANCH_FILTERS <<< "master"

          for i in "${BRANCH_FILTERS[@]}"; do
            if [ "${i}" == "${CIRCLE_BRANCH}" ]; then
              current_branch_in_filter=true
            fi
          done

          if [ "x" == "xmaster" ] || [ "$current_branch_in_filter" = true ]; then
            # Provide error if no webhook is set and error. Otherwise continue
            if [ -z "webhook" ]; then
              echo "NO SLACK WEBHOOK SET"
              echo "Please input your SLACK_WEBHOOK value either in the settings for this project, or as a parameter for this orb."
              exit 1
            else
              #Create Members string
              if [ -n "" ]; then
                IFS="," read -ra SLACK_MEMBERS <<< ""
                for i in "${SLACK_MEMBERS[@]}"; do
                  if [ $(echo ${i} | head -c 1) == "S" ]; then
                    SLACK_MENTIONS="${SLACK_MENTIONS}<!subteam^${i}> "
                  elif echo ${i} | grep -E "^(here|channel|everyone)$" > /dev/null; then
                    SLACK_MENTIONS="${SLACK_MENTIONS}<!${i}> "
                  else
                    SLACK_MENTIONS="${SLACK_MENTIONS}<@${i}> "
                  fi
                done
              fi
              #If successful
              if [ "$SLACK_BUILD_STATUS" = "success" ]; then
                #Skip if fail_only
                if [ true = true ]; then
                  echo "The job completed successfully"
                  echo '"fail_only" is set to "true". No Slack notification sent.'
                else
                  curl -X POST -H 'Content-type: application/json' \
                    --data "{ \
                              \"attachments\": [ \
                                { \
                                  \"fallback\": \":tada: A $CIRCLE_JOB job has succeeded!\", \
                                  \"text\": \":tada: A $CIRCLE_JOB job has succeeded! $SLACK_MENTIONS\", \
                                  \"fields\": [ \
                                    { \
                                      \"title\": \"Project\", \
                                      \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                                      \"short\": true \
                                    }, \
                                    { \
                                      \"title\": \"Job Number\", \
                                      \"value\": \"$CIRCLE_BUILD_NUM\", \
                                      \"short\": true \
                                    } \
                                  ], \
                                  \"actions\": [ \
                                    { \
                                      \"type\": \"button\", \
                                      \"text\": \"Visit Job\", \
                                      \"url\": \"$CIRCLE_BUILD_URL\" \
                                    } \
                                  ], \
                                  \"color\": \"#1CBF43\" \
                                } \
                              ] \
                            } " webhook
                  echo "Job completed successfully. Alert sent."
                fi
              else
                #If Failed
                curl -X POST -H 'Content-type: application/json' \
                  --data "{ \
                    \"attachments\": [ \
                      { \
                        \"fallback\": \":red_circle: A $CIRCLE_JOB job has failed!\", \
                        \"text\": \":red_circle: A $CIRCLE_JOB job has failed! $SLACK_MENTIONS\", \
                        \"fields\": [ \
                          { \
                            \"title\": \"Project\", \
                            \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                            \"short\": true \
                          }, \
                          { \
                            \"title\": \"Job Number\", \
                            \"value\": \"$CIRCLE_BUILD_NUM\", \
                            \"short\": true \
                          } \
                        ], \
                        \"actions\": [ \
                          { \
                            \"type\": \"button\", \
                            \"text\": \"Visit Job\", \
                            \"url\": \"$CIRCLE_BUILD_URL\" \
                          } \
                        ], \
                        \"color\": \"#ed5c5c\" \
                      } \
                    ] \
                  } " webhook
                echo "Job failed. Alert sent."
              fi
            fi
          else
            echo "Current branch is not included in only_for_branches filter; no status alert will be sent"
          fi
        name: Slack - Sending Status Alert
        shell: /bin/bash
        when: always
    working_directory: ~/boundary
  netbsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: f6c8b1c13e5c636467b20e13944515e236c98c66
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-f6c8b1c13e5c636467b20e13944515e236c98c66-{{checksum ".buildcache/cache-keys/package-f6c8b1c13e5c636467b20e13944515e236c98c66"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-f6c8b1c13e5c636467b20e13944515e236c98c66-{{checksum ".buildcache/cache-keys/package-f6c8b1c13e5c636467b20e13944515e236c98c66"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  openbsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: c385266991e61b54a3c062b8968463ab7088a0a1
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-c385266991e61b54a3c062b8968463ab7088a0a1-{{checksum ".buildcache/cache-keys/package-c385266991e61b54a3c062b8968463ab7088a0a1"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-c385266991e61b54a3c062b8968463ab7088a0a1-{{checksum ".buildcache/cache-keys/package-c385266991e61b54a3c062b8968463ab7088a0a1"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  netbsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: b3d8c12f0a1f6c68fff799ee8cbc47d987a51e85
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-b3d8c12f0a1f6c68fff799ee8cbc47d987a51e85-{{checksum ".buildcache/cache-keys/package-b3d8c12f0a1f6c68fff799ee8cbc47d987a51e85"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-b3d8c12f0a1f6c68fff799ee8cbc47d987a51e85-{{checksum ".buildcache/cache-keys/package-b3d8c12f0a1f6c68fff799ee8cbc47d987a51e85"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  freebsd_arm_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 357574dc85bf12fb57091f018997bfc14289881f
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-357574dc85bf12fb57091f018997bfc14289881f-{{checksum ".buildcache/cache-keys/package-357574dc85bf12fb57091f018997bfc14289881f"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-357574dc85bf12fb57091f018997bfc14289881f-{{checksum ".buildcache/cache-keys/package-357574dc85bf12fb57091f018997bfc14289881f"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  windows_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 318b5bdae494d8e7ebc7552496e8f2b469279c1c
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-318b5bdae494d8e7ebc7552496e8f2b469279c1c-{{checksum ".buildcache/cache-keys/package-318b5bdae494d8e7ebc7552496e8f2b469279c1c"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-318b5bdae494d8e7ebc7552496e8f2b469279c1c-{{checksum ".buildcache/cache-keys/package-318b5bdae494d8e7ebc7552496e8f2b469279c1c"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
workflows:
  build-standalone:
    jobs:
    - build-common-layers
    - darwin_amd64_package:
        requires:
        - build-common-layers
    - freebsd_386_package:
        requires:
        - build-common-layers
    - freebsd_amd64_package:
        requires:
        - build-common-layers
    - freebsd_arm_package:
        requires:
        - build-common-layers
    - linux_386_package:
        requires:
        - build-common-layers
    - linux_amd64_package:
        requires:
        - build-common-layers
    - linux_arm_package:
        requires:
        - build-common-layers
    - linux_arm64_package:
        requires:
        - build-common-layers
    - netbsd_386_package:
        requires:
        - build-common-layers
    - netbsd_amd64_package:
        requires:
        - build-common-layers
    - openbsd_386_package:
        requires:
        - build-common-layers
    - openbsd_amd64_package:
        requires:
        - build-common-layers
    - solaris_amd64_package:
        requires:
        - build-common-layers
    - windows_386_package:
        requires:
        - build-common-layers
    - windows_amd64_package:
        requires:
        - build-common-layers
    - bundle-releases:
        requires:
        - darwin_amd64_package
        - freebsd_386_package
        - freebsd_amd64_package
        - freebsd_arm_package
        - linux_386_package
        - linux_amd64_package
        - linux_arm_package
        - linux_arm64_package
        - netbsd_386_package
        - netbsd_amd64_package
        - openbsd_386_package
        - openbsd_amd64_package
        - solaris_amd64_package
        - windows_386_package
        - windows_amd64_package
  default:
    jobs:
    - build
  version: 2
