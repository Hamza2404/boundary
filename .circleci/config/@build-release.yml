---
# ***
# WARNING: Do not EDIT or MERGE this file, it is generated by packagespec.
# ***

version: 2.1

executors:
  builder:
    docker:
      - image: circleci/buildpack-deps
    environment:
      PRODUCT_REVISION: ""
      AUTO_INSTALL_TOOLS: 'YES'
      BUILDKIT_PROGRESS: plain
    shell: /usr/bin/env bash -euo pipefail -c
  builder-machine:
    machine:
      image: ubuntu-1604:202007-01
    resource_class: xlarge
    environment:
      PRODUCT_REVISION: ""
      AUTO_INSTALL_TOOLS: 'YES'
      BUILDKIT_PROGRESS: plain
    shell: /usr/bin/env bash -euo pipefail -c

workflows:
  version: 2
  build-standalone:
    jobs:
      - build-common-layers
      - darwin_amd64_package: { requires: [ build-common-layers ] }
      - freebsd_386_package: { requires: [ build-common-layers ] }
      - freebsd_amd64_package: { requires: [ build-common-layers ] }
      - freebsd_arm_package: { requires: [ build-common-layers ] }
      - linux_386_package: { requires: [ build-common-layers ] }
      - linux_amd64_package: { requires: [ build-common-layers ] }
      - linux_arm_package: { requires: [ build-common-layers ] }
      - linux_arm64_package: { requires: [ build-common-layers ] }
      - netbsd_386_package: { requires: [ build-common-layers ] }
      - netbsd_amd64_package: { requires: [ build-common-layers ] }
      - openbsd_386_package: { requires: [ build-common-layers ] }
      - openbsd_amd64_package: { requires: [ build-common-layers ] }
      - solaris_amd64_package: { requires: [ build-common-layers ] }
      - windows_386_package: { requires: [ build-common-layers ] }
      - windows_amd64_package: { requires: [ build-common-layers ] }
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"

      - checkout
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build image cache
          keys:
            - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
            - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
            - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
            - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
      - run:
          name: Finish early if loaded exact match from cache.
          command: |
            if [ -f .buildcache/archives/03-copy-source-ca8ebf7592f88b86f492c947caab70914efd951c.tar.gz ]; then
              echo "Exact match found in cache, skipping build."
              circleci-agent step halt
            else
              echo "No exact match found, proceeding with build."
            fi
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            LAYER_SPEC_ID=03-copy-source-ca8ebf7592f88b86f492c947caab70914efd951c make -C packages*.lock load-builder-cache
      - run:
          name: Build base layer
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-b035732a9181cb923e58b88eff262c379a1a1ad2-image
      - run:
          name: Build ui layer
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-a46925cd79db8d8f17f005774b1f4faef82d83b6-image
      - run:
          name: Build go-modules layer
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf-image
      - run:
          name: Build copy-source layer
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-ca8ebf7592f88b86f492c947caab70914efd951c-image

      - run:
          name: Export builder image
          command: make -f packages*.lock/layer.mk 03-copy-source-ca8ebf7592f88b86f492c947caab70914efd951c-save
      - save_cache:
          name: Save layer copy-source to cache.
          key: cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
          paths:
            - .buildcache/archives/03-copy-source-ca8ebf7592f88b86f492c947caab70914efd951c.tar.gz
      - run:
          name: Prepare layer go-modules for caching
          command: mv .buildcache/archives/03-copy-source-ca8ebf7592f88b86f492c947caab70914efd951c.tar.gz .buildcache/archives/02-go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf.tar.gz
      - save_cache:
          name: Save layer go-modules to cache.
          key: cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
          paths:
            - .buildcache/archives/02-go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf.tar.gz
      - run:
          name: Prepare layer ui for caching
          command: mv .buildcache/archives/02-go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf.tar.gz .buildcache/archives/01-ui-a46925cd79db8d8f17f005774b1f4faef82d83b6.tar.gz
      - save_cache:
          name: Save layer ui to cache.
          key: cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
          paths:
            - .buildcache/archives/01-ui-a46925cd79db8d8f17f005774b1f4faef82d83b6.tar.gz
      - run:
          name: Prepare layer base for caching
          command: mv .buildcache/archives/01-ui-a46925cd79db8d8f17f005774b1f4faef82d83b6.tar.gz .buildcache/archives/00-base-b035732a9181cb923e58b88eff262c379a1a1ad2.tar.gz
      - save_cache:
          name: Save layer base to cache.
          key: cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
          paths:
            - .buildcache/archives/00-base-b035732a9181cb923e58b88eff262c379a1a1ad2.tar.gz
  darwin_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 18e4a3d8cebfa3e1d55f05eff9f04d7c1a7ce5ba
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-18e4a3d8cebfa3e1d55f05eff9f04d7c1a7ce5ba-{{checksum ".buildcache/cache-keys/package-18e4a3d8cebfa3e1d55f05eff9f04d7c1a7ce5ba"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
          - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
          - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
          - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-18e4a3d8cebfa3e1d55f05eff9f04d7c1a7ce5ba-{{checksum ".buildcache/cache-keys/package-18e4a3d8cebfa3e1d55f05eff9f04d7c1a7ce5ba"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  freebsd_386_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: d42d58396e7fbb73b8ef98f61fc5533b1ac42fa1
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-d42d58396e7fbb73b8ef98f61fc5533b1ac42fa1-{{checksum ".buildcache/cache-keys/package-d42d58396e7fbb73b8ef98f61fc5533b1ac42fa1"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
          - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
          - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
          - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-d42d58396e7fbb73b8ef98f61fc5533b1ac42fa1-{{checksum ".buildcache/cache-keys/package-d42d58396e7fbb73b8ef98f61fc5533b1ac42fa1"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  freebsd_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: f5257d870bc42fb92f17ea3a13761538fb7a9d7d
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-f5257d870bc42fb92f17ea3a13761538fb7a9d7d-{{checksum ".buildcache/cache-keys/package-f5257d870bc42fb92f17ea3a13761538fb7a9d7d"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
          - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
          - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
          - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-f5257d870bc42fb92f17ea3a13761538fb7a9d7d-{{checksum ".buildcache/cache-keys/package-f5257d870bc42fb92f17ea3a13761538fb7a9d7d"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  freebsd_arm_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 357574dc85bf12fb57091f018997bfc14289881f
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-357574dc85bf12fb57091f018997bfc14289881f-{{checksum ".buildcache/cache-keys/package-357574dc85bf12fb57091f018997bfc14289881f"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
          - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
          - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
          - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-357574dc85bf12fb57091f018997bfc14289881f-{{checksum ".buildcache/cache-keys/package-357574dc85bf12fb57091f018997bfc14289881f"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  linux_386_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: b7a7452e0bddde0e5e8229594f99f7588bdf356c
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-b7a7452e0bddde0e5e8229594f99f7588bdf356c-{{checksum ".buildcache/cache-keys/package-b7a7452e0bddde0e5e8229594f99f7588bdf356c"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
          - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
          - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
          - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-b7a7452e0bddde0e5e8229594f99f7588bdf356c-{{checksum ".buildcache/cache-keys/package-b7a7452e0bddde0e5e8229594f99f7588bdf356c"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  linux_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: fa2f719eb3b1b39fa983867f2b27812707c2ec60
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-fa2f719eb3b1b39fa983867f2b27812707c2ec60-{{checksum ".buildcache/cache-keys/package-fa2f719eb3b1b39fa983867f2b27812707c2ec60"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
          - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
          - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
          - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-fa2f719eb3b1b39fa983867f2b27812707c2ec60-{{checksum ".buildcache/cache-keys/package-fa2f719eb3b1b39fa983867f2b27812707c2ec60"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  linux_arm_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 38bc1a3cda8aaecb6d92b6472acb37201f00afde
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-38bc1a3cda8aaecb6d92b6472acb37201f00afde-{{checksum ".buildcache/cache-keys/package-38bc1a3cda8aaecb6d92b6472acb37201f00afde"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
          - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
          - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
          - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-38bc1a3cda8aaecb6d92b6472acb37201f00afde-{{checksum ".buildcache/cache-keys/package-38bc1a3cda8aaecb6d92b6472acb37201f00afde"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  linux_arm64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 29fcab1aa1a45f0ba9a863c2fd9afb0324c25b7f
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-29fcab1aa1a45f0ba9a863c2fd9afb0324c25b7f-{{checksum ".buildcache/cache-keys/package-29fcab1aa1a45f0ba9a863c2fd9afb0324c25b7f"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
          - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
          - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
          - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-29fcab1aa1a45f0ba9a863c2fd9afb0324c25b7f-{{checksum ".buildcache/cache-keys/package-29fcab1aa1a45f0ba9a863c2fd9afb0324c25b7f"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  netbsd_386_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: b3d8c12f0a1f6c68fff799ee8cbc47d987a51e85
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-b3d8c12f0a1f6c68fff799ee8cbc47d987a51e85-{{checksum ".buildcache/cache-keys/package-b3d8c12f0a1f6c68fff799ee8cbc47d987a51e85"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
          - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
          - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
          - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-b3d8c12f0a1f6c68fff799ee8cbc47d987a51e85-{{checksum ".buildcache/cache-keys/package-b3d8c12f0a1f6c68fff799ee8cbc47d987a51e85"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  netbsd_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: f6c8b1c13e5c636467b20e13944515e236c98c66
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-f6c8b1c13e5c636467b20e13944515e236c98c66-{{checksum ".buildcache/cache-keys/package-f6c8b1c13e5c636467b20e13944515e236c98c66"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
          - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
          - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
          - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-f6c8b1c13e5c636467b20e13944515e236c98c66-{{checksum ".buildcache/cache-keys/package-f6c8b1c13e5c636467b20e13944515e236c98c66"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  openbsd_386_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: ee0072e0d0e8f2564a35b544495a81ad35832866
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-ee0072e0d0e8f2564a35b544495a81ad35832866-{{checksum ".buildcache/cache-keys/package-ee0072e0d0e8f2564a35b544495a81ad35832866"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
          - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
          - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
          - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-ee0072e0d0e8f2564a35b544495a81ad35832866-{{checksum ".buildcache/cache-keys/package-ee0072e0d0e8f2564a35b544495a81ad35832866"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  openbsd_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: c385266991e61b54a3c062b8968463ab7088a0a1
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-c385266991e61b54a3c062b8968463ab7088a0a1-{{checksum ".buildcache/cache-keys/package-c385266991e61b54a3c062b8968463ab7088a0a1"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
          - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
          - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
          - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-c385266991e61b54a3c062b8968463ab7088a0a1-{{checksum ".buildcache/cache-keys/package-c385266991e61b54a3c062b8968463ab7088a0a1"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  solaris_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: c21e3f16a056e333be4e16944935445d8249d246
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-c21e3f16a056e333be4e16944935445d8249d246-{{checksum ".buildcache/cache-keys/package-c21e3f16a056e333be4e16944935445d8249d246"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
          - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
          - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
          - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-c21e3f16a056e333be4e16944935445d8249d246-{{checksum ".buildcache/cache-keys/package-c21e3f16a056e333be4e16944935445d8249d246"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  windows_386_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 17bb086a4d69d96a95c84f01d90cfab2c9db3ba2
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-17bb086a4d69d96a95c84f01d90cfab2c9db3ba2-{{checksum ".buildcache/cache-keys/package-17bb086a4d69d96a95c84f01d90cfab2c9db3ba2"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
          - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
          - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
          - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-17bb086a4d69d96a95c84f01d90cfab2c9db3ba2-{{checksum ".buildcache/cache-keys/package-17bb086a4d69d96a95c84f01d90cfab2c9db3ba2"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  windows_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 318b5bdae494d8e7ebc7552496e8f2b469279c1c
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-318b5bdae494d8e7ebc7552496e8f2b469279c1c-{{checksum ".buildcache/cache-keys/package-318b5bdae494d8e7ebc7552496e8f2b469279c1c"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
          - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
          - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
          - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-318b5bdae494d8e7ebc7552496e8f2b469279c1c-{{checksum ".buildcache/cache-keys/package-318b5bdae494d8e7ebc7552496e8f2b469279c1c"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.


  bundle-releases:
    executor: builder
    steps:
      - checkout
      - write-all-package-cache-keys
      - load-darwin_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 18e4a3d8cebfa3e1d55f05eff9f04d7c1a7ce5ba
          name: Write package metadata for darwin_amd64_package
          command: |
            make package-meta
      - load-freebsd_386_package
      - run:
          environment:
            PACKAGE_SPEC_ID: d42d58396e7fbb73b8ef98f61fc5533b1ac42fa1
          name: Write package metadata for freebsd_386_package
          command: |
            make package-meta
      - load-freebsd_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: f5257d870bc42fb92f17ea3a13761538fb7a9d7d
          name: Write package metadata for freebsd_amd64_package
          command: |
            make package-meta
      - load-freebsd_arm_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 357574dc85bf12fb57091f018997bfc14289881f
          name: Write package metadata for freebsd_arm_package
          command: |
            make package-meta
      - load-linux_386_package
      - run:
          environment:
            PACKAGE_SPEC_ID: b7a7452e0bddde0e5e8229594f99f7588bdf356c
          name: Write package metadata for linux_386_package
          command: |
            make package-meta
      - load-linux_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: fa2f719eb3b1b39fa983867f2b27812707c2ec60
          name: Write package metadata for linux_amd64_package
          command: |
            make package-meta
      - load-linux_arm_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 38bc1a3cda8aaecb6d92b6472acb37201f00afde
          name: Write package metadata for linux_arm_package
          command: |
            make package-meta
      - load-linux_arm64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 29fcab1aa1a45f0ba9a863c2fd9afb0324c25b7f
          name: Write package metadata for linux_arm64_package
          command: |
            make package-meta
      - load-netbsd_386_package
      - run:
          environment:
            PACKAGE_SPEC_ID: b3d8c12f0a1f6c68fff799ee8cbc47d987a51e85
          name: Write package metadata for netbsd_386_package
          command: |
            make package-meta
      - load-netbsd_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: f6c8b1c13e5c636467b20e13944515e236c98c66
          name: Write package metadata for netbsd_amd64_package
          command: |
            make package-meta
      - load-openbsd_386_package
      - run:
          environment:
            PACKAGE_SPEC_ID: ee0072e0d0e8f2564a35b544495a81ad35832866
          name: Write package metadata for openbsd_386_package
          command: |
            make package-meta
      - load-openbsd_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: c385266991e61b54a3c062b8968463ab7088a0a1
          name: Write package metadata for openbsd_amd64_package
          command: |
            make package-meta
      - load-solaris_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: c21e3f16a056e333be4e16944935445d8249d246
          name: Write package metadata for solaris_amd64_package
          command: |
            make package-meta
      - load-windows_386_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 17bb086a4d69d96a95c84f01d90cfab2c9db3ba2
          name: Write package metadata for windows_386_package
          command: |
            make package-meta
      - load-windows_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 318b5bdae494d8e7ebc7552496e8f2b469279c1c
          name: Write package metadata for windows_amd64_package
          command: |
            make package-meta
      - run:
          name: Write package aliases
          command:
            make aliases
      - run:
          name: List Build Cache
          command: ls -lahR .buildcache

      # Give the lockfile a name store_artifacts can work with.
      - run: cp packages*.lock/pkgs.yml lockfile-standalone.yml

      # Surface the lock file as an artifact.
      - store_artifacts:
          path: lockfile-standalone.yml
          destination: lockfile-standalone.yml

      # Surface the package store directory as an artifact.
      # This makes each zipped package separately downloadable.
      - store_artifacts:
          path: .buildcache/packages
          destination: packages-standalone

      # Surface a tarball of the whole package store plus lockfile as an artifact.
      - run: tar -czf packages-standalone.tar.gz .buildcache/packages lockfile-standalone.yml
      - store_artifacts:
          path: packages-standalone.tar.gz
          destination: packages-standalone.tar.gz

      # Surface a tarball of just the metadata files.
      - run: tar -czf meta-standalone.tar.gz .buildcache/packages/store/*.json lockfile-standalone.yml
      - store_artifacts:
          path: meta-standalone.tar.gz
          destination: meta-standalone.tar.gz

commands:
  load-darwin_amd64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-18e4a3d8cebfa3e1d55f05eff9f04d7c1a7ce5ba-{{checksum ".buildcache/cache-keys/package-18e4a3d8cebfa3e1d55f05eff9f04d7c1a7ce5ba"}}'
  
  load-freebsd_386_package:
    steps:
      - restore_cache:
          key: 'cache006-package-d42d58396e7fbb73b8ef98f61fc5533b1ac42fa1-{{checksum ".buildcache/cache-keys/package-d42d58396e7fbb73b8ef98f61fc5533b1ac42fa1"}}'
  
  load-freebsd_amd64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-f5257d870bc42fb92f17ea3a13761538fb7a9d7d-{{checksum ".buildcache/cache-keys/package-f5257d870bc42fb92f17ea3a13761538fb7a9d7d"}}'
  
  load-freebsd_arm_package:
    steps:
      - restore_cache:
          key: 'cache006-package-357574dc85bf12fb57091f018997bfc14289881f-{{checksum ".buildcache/cache-keys/package-357574dc85bf12fb57091f018997bfc14289881f"}}'
  
  load-linux_386_package:
    steps:
      - restore_cache:
          key: 'cache006-package-b7a7452e0bddde0e5e8229594f99f7588bdf356c-{{checksum ".buildcache/cache-keys/package-b7a7452e0bddde0e5e8229594f99f7588bdf356c"}}'
  
  load-linux_amd64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-fa2f719eb3b1b39fa983867f2b27812707c2ec60-{{checksum ".buildcache/cache-keys/package-fa2f719eb3b1b39fa983867f2b27812707c2ec60"}}'
  
  load-linux_arm_package:
    steps:
      - restore_cache:
          key: 'cache006-package-38bc1a3cda8aaecb6d92b6472acb37201f00afde-{{checksum ".buildcache/cache-keys/package-38bc1a3cda8aaecb6d92b6472acb37201f00afde"}}'
  
  load-linux_arm64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-29fcab1aa1a45f0ba9a863c2fd9afb0324c25b7f-{{checksum ".buildcache/cache-keys/package-29fcab1aa1a45f0ba9a863c2fd9afb0324c25b7f"}}'
  
  load-netbsd_386_package:
    steps:
      - restore_cache:
          key: 'cache006-package-b3d8c12f0a1f6c68fff799ee8cbc47d987a51e85-{{checksum ".buildcache/cache-keys/package-b3d8c12f0a1f6c68fff799ee8cbc47d987a51e85"}}'
  
  load-netbsd_amd64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-f6c8b1c13e5c636467b20e13944515e236c98c66-{{checksum ".buildcache/cache-keys/package-f6c8b1c13e5c636467b20e13944515e236c98c66"}}'
  
  load-openbsd_386_package:
    steps:
      - restore_cache:
          key: 'cache006-package-ee0072e0d0e8f2564a35b544495a81ad35832866-{{checksum ".buildcache/cache-keys/package-ee0072e0d0e8f2564a35b544495a81ad35832866"}}'
  
  load-openbsd_amd64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-c385266991e61b54a3c062b8968463ab7088a0a1-{{checksum ".buildcache/cache-keys/package-c385266991e61b54a3c062b8968463ab7088a0a1"}}'
  
  load-solaris_amd64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-c21e3f16a056e333be4e16944935445d8249d246-{{checksum ".buildcache/cache-keys/package-c21e3f16a056e333be4e16944935445d8249d246"}}'
  
  load-windows_386_package:
    steps:
      - restore_cache:
          key: 'cache006-package-17bb086a4d69d96a95c84f01d90cfab2c9db3ba2-{{checksum ".buildcache/cache-keys/package-17bb086a4d69d96a95c84f01d90cfab2c9db3ba2"}}'
  
  load-windows_amd64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-318b5bdae494d8e7ebc7552496e8f2b469279c1c-{{checksum ".buildcache/cache-keys/package-318b5bdae494d8e7ebc7552496e8f2b469279c1c"}}'
  

  write-build-layer-cache-keys:
    steps:
      - run:
          name: Write builder layer cache keys
          command: make -C packages*.lock write-builder-cache-keys

  write-package-cache-key:
    steps:
      - run:
          name: Write package cache key
          command: make -C packages*.lock write-package-cache-key

  write-all-package-cache-keys:
    steps:
      - run:
          name: Write all package cache keys
          command: make -C packages*.lock write-all-package-cache-keys
